{"ast":null,"code":"var _jsxFileName = \"/Users/chief/Projects and Codes/566 Final Project/frontend/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef, useEffect } from 'react';\nimport './App.css';\nimport ImageUploader from './components/ImageUploader';\nimport Canvas from './components/Canvas';\nimport TextureLibrary from './components/TextureLibrary';\nimport Controls from './components/Controls';\nimport { apiService, fileToBase64 } from './services/api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  // State management\n  const [originalImage, setOriginalImage] = useState(null);\n  const [currentImage, setCurrentImage] = useState(null);\n  const [selectedTexture, setSelectedTexture] = useState(null);\n  const [selectedRegion, setSelectedRegion] = useState(null);\n  const [processing, setProcessing] = useState(false);\n  const [status, setStatus] = useState('Ready to start');\n  const [edges, setEdges] = useState(null);\n  const [detectedLines, setDetectedLines] = useState([]);\n\n  // Settings\n  const [blendMode, setBlendMode] = useState('normal');\n  const [opacity, setOpacity] = useState(80);\n  const [brightness, setBrightness] = useState(0);\n  const [perspectiveCorrection, setPerspectiveCorrection] = useState(true);\n\n  // Handle image upload\n  const handleImageUpload = async file => {\n    try {\n      setProcessing(true);\n      setStatus('Loading image...');\n      const imageData = await fileToBase64(file);\n      setOriginalImage(imageData);\n      setCurrentImage(imageData);\n      setStatus('Image loaded successfully');\n    } catch (error) {\n      console.error('Error loading image:', error);\n      setStatus('Error loading image');\n    } finally {\n      setProcessing(false);\n    }\n  };\n\n  // Handle texture selection\n  const handleTextureSelect = texture => {\n    setSelectedTexture(texture);\n    setStatus('Texture selected');\n  };\n\n  // Handle region selection from canvas\n  const handleRegionSelect = region => {\n    setSelectedRegion(region);\n    setStatus(`Region selected: ${Math.round(region.width)}x${Math.round(region.height)}px`);\n  };\n\n  // Detect edges\n  const handleEdgeDetection = async () => {\n    if (!originalImage) return;\n    try {\n      setProcessing(true);\n      setStatus('Detecting edges...');\n      const result = await apiService.detectEdges(originalImage, 'canny', {\n        low_threshold: 50,\n        high_threshold: 150\n      });\n      setEdges(result.edges);\n      setStatus('Edge detection complete');\n    } catch (error) {\n      console.error('Error detecting edges:', error);\n      setStatus('Error detecting edges');\n    } finally {\n      setProcessing(false);\n    }\n  };\n\n  // Detect surfaces\n  const handleSurfaceDetection = async () => {\n    if (!originalImage) return;\n    try {\n      setProcessing(true);\n      setStatus('Detecting surfaces...');\n      const result = await apiService.detectSurfaces(originalImage);\n      setCurrentImage(result.result);\n      setEdges(result.edges);\n      setDetectedLines({\n        horizontal: result.horizontal_lines,\n        vertical: result.vertical_lines,\n        intersections: result.intersections\n      });\n      setStatus(`Detected ${result.horizontal_lines} horizontal and ${result.vertical_lines} vertical lines`);\n    } catch (error) {\n      console.error('Error detecting surfaces:', error);\n      setStatus('Error detecting surfaces');\n    } finally {\n      setProcessing(false);\n    }\n  };\n\n  // Apply texture\n  const handleApplyTexture = async () => {\n    if (!originalImage || !selectedTexture || !selectedRegion) {\n      setStatus('Please select an image, texture, and region');\n      return;\n    }\n    try {\n      setProcessing(true);\n      setStatus('Applying texture...');\n\n      // Generate or get texture\n      let textureData = selectedTexture.data;\n      if (!textureData) {\n        // Generate texture from backend\n        const texResult = await apiService.generateTexture(selectedTexture.type, selectedRegion.width, selectedRegion.height, {\n          base_color: selectedTexture.color || [139, 69, 19]\n        });\n        textureData = texResult.texture;\n      }\n\n      // Calculate corners from selected region\n      const corners = [[selectedRegion.x, selectedRegion.y], [selectedRegion.x + selectedRegion.width, selectedRegion.y], [selectedRegion.x + selectedRegion.width, selectedRegion.y + selectedRegion.height], [selectedRegion.x, selectedRegion.y + selectedRegion.height]];\n\n      // Apply texture\n      const result = await apiService.applyTexture(currentImage, textureData, corners, opacity / 100, brightness / 100);\n      setCurrentImage(result.result);\n      setStatus('Texture applied successfully');\n    } catch (error) {\n      console.error('Error applying texture:', error);\n      setStatus('Error applying texture');\n    } finally {\n      setProcessing(false);\n    }\n  };\n\n  // Reset to original\n  const handleReset = () => {\n    setCurrentImage(originalImage);\n    setSelectedRegion(null);\n    setEdges(null);\n    setDetectedLines([]);\n    setStatus('Reset to original');\n  };\n\n  // Save result\n  const handleSave = () => {\n    if (!currentImage) return;\n    const link = document.createElement('a');\n    link.download = 'renderease-result.png';\n    link.href = currentImage;\n    link.click();\n    setStatus('Image saved successfully');\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"app-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"RenderEase\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"subtitle\",\n        children: \"Interior Design Visualization Tool\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      className: \"app-main\",\n      children: [/*#__PURE__*/_jsxDEV(\"aside\", {\n        className: \"control-panel\",\n        children: [/*#__PURE__*/_jsxDEV(\"section\", {\n          className: \"panel-section\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"1. Upload Room Image\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 190,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(ImageUploader, {\n            onImageUpload: handleImageUpload\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 191,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 189,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n          className: \"panel-section\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"2. Detect Surfaces\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 195,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"detection-controls\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"btn btn-secondary\",\n              onClick: handleEdgeDetection,\n              disabled: !originalImage || processing,\n              children: \"Detect Edges\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 197,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"btn btn-secondary\",\n              onClick: handleSurfaceDetection,\n              disabled: !originalImage || processing,\n              children: \"Detect Surfaces (Hough)\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 204,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 196,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"instruction-text\",\n            children: \"Or manually select a region on the canvas\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 212,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 194,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n          className: \"panel-section\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"3. Choose Texture\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 218,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TextureLibrary, {\n            onTextureSelect: handleTextureSelect,\n            selectedTexture: selectedTexture\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 219,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 217,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n          className: \"panel-section\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"4. Adjust Settings\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 226,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Controls, {\n            opacity: opacity,\n            setOpacity: setOpacity,\n            brightness: brightness,\n            setBrightness: setBrightness,\n            blendMode: blendMode,\n            setBlendMode: setBlendMode,\n            perspectiveCorrection: perspectiveCorrection,\n            setPerspectiveCorrection: setPerspectiveCorrection\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 227,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 225,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n          className: \"panel-section\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"5. Actions\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 240,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"action-buttons\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"btn btn-primary\",\n              onClick: handleApplyTexture,\n              disabled: !selectedTexture || !selectedRegion || processing,\n              children: processing ? 'Processing...' : 'Apply Texture'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 242,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"btn btn-secondary\",\n              onClick: handleReset,\n              disabled: !currentImage || processing,\n              children: \"Reset\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 249,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"btn btn-success\",\n              onClick: handleSave,\n              disabled: !currentImage || processing,\n              children: \"Save Result\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 256,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 241,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 239,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"canvas-area\",\n        children: [/*#__PURE__*/_jsxDEV(Canvas, {\n          image: currentImage,\n          edgeImage: edges,\n          onRegionSelect: handleRegionSelect,\n          selectedRegion: selectedRegion\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 268,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"status-bar\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"status-item\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"status-label\",\n              children: \"Status:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 277,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"status-value\",\n              children: status\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 278,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 276,\n            columnNumber: 13\n          }, this), selectedRegion && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"status-item\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"status-label\",\n              children: \"Selection:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 282,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"status-value\",\n              children: [Math.round(selectedRegion.width), \"x\", Math.round(selectedRegion.height), \"px\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 283,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 281,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 275,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 267,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"footer\", {\n      className: \"app-footer\",\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"RenderEase - COMP SCI 566 Project | Team: Bhinu Puvva, Bala Shukla, Rain Jiayu Sun\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 293,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 292,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 181,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"AYS6deKxD9Z/d56+vNAbIJZUJBc=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useRef","useEffect","ImageUploader","Canvas","TextureLibrary","Controls","apiService","fileToBase64","jsxDEV","_jsxDEV","App","_s","originalImage","setOriginalImage","currentImage","setCurrentImage","selectedTexture","setSelectedTexture","selectedRegion","setSelectedRegion","processing","setProcessing","status","setStatus","edges","setEdges","detectedLines","setDetectedLines","blendMode","setBlendMode","opacity","setOpacity","brightness","setBrightness","perspectiveCorrection","setPerspectiveCorrection","handleImageUpload","file","imageData","error","console","handleTextureSelect","texture","handleRegionSelect","region","Math","round","width","height","handleEdgeDetection","result","detectEdges","low_threshold","high_threshold","handleSurfaceDetection","detectSurfaces","horizontal","horizontal_lines","vertical","vertical_lines","intersections","handleApplyTexture","textureData","data","texResult","generateTexture","type","base_color","color","corners","x","y","applyTexture","handleReset","handleSave","link","document","createElement","download","href","click","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onImageUpload","onClick","disabled","onTextureSelect","image","edgeImage","onRegionSelect","_c","$RefreshReg$"],"sources":["/Users/chief/Projects and Codes/566 Final Project/frontend/src/App.js"],"sourcesContent":["import React, { useState, useRef, useEffect } from 'react';\nimport './App.css';\nimport ImageUploader from './components/ImageUploader';\nimport Canvas from './components/Canvas';\nimport TextureLibrary from './components/TextureLibrary';\nimport Controls from './components/Controls';\nimport { apiService, fileToBase64 } from './services/api';\n\nfunction App() {\n  // State management\n  const [originalImage, setOriginalImage] = useState(null);\n  const [currentImage, setCurrentImage] = useState(null);\n  const [selectedTexture, setSelectedTexture] = useState(null);\n  const [selectedRegion, setSelectedRegion] = useState(null);\n  const [processing, setProcessing] = useState(false);\n  const [status, setStatus] = useState('Ready to start');\n  const [edges, setEdges] = useState(null);\n  const [detectedLines, setDetectedLines] = useState([]);\n\n  // Settings\n  const [blendMode, setBlendMode] = useState('normal');\n  const [opacity, setOpacity] = useState(80);\n  const [brightness, setBrightness] = useState(0);\n  const [perspectiveCorrection, setPerspectiveCorrection] = useState(true);\n\n  // Handle image upload\n  const handleImageUpload = async (file) => {\n    try {\n      setProcessing(true);\n      setStatus('Loading image...');\n\n      const imageData = await fileToBase64(file);\n      setOriginalImage(imageData);\n      setCurrentImage(imageData);\n\n      setStatus('Image loaded successfully');\n    } catch (error) {\n      console.error('Error loading image:', error);\n      setStatus('Error loading image');\n    } finally {\n      setProcessing(false);\n    }\n  };\n\n  // Handle texture selection\n  const handleTextureSelect = (texture) => {\n    setSelectedTexture(texture);\n    setStatus('Texture selected');\n  };\n\n  // Handle region selection from canvas\n  const handleRegionSelect = (region) => {\n    setSelectedRegion(region);\n    setStatus(`Region selected: ${Math.round(region.width)}x${Math.round(region.height)}px`);\n  };\n\n  // Detect edges\n  const handleEdgeDetection = async () => {\n    if (!originalImage) return;\n\n    try {\n      setProcessing(true);\n      setStatus('Detecting edges...');\n\n      const result = await apiService.detectEdges(originalImage, 'canny', {\n        low_threshold: 50,\n        high_threshold: 150,\n      });\n\n      setEdges(result.edges);\n      setStatus('Edge detection complete');\n    } catch (error) {\n      console.error('Error detecting edges:', error);\n      setStatus('Error detecting edges');\n    } finally {\n      setProcessing(false);\n    }\n  };\n\n  // Detect surfaces\n  const handleSurfaceDetection = async () => {\n    if (!originalImage) return;\n\n    try {\n      setProcessing(true);\n      setStatus('Detecting surfaces...');\n\n      const result = await apiService.detectSurfaces(originalImage);\n\n      setCurrentImage(result.result);\n      setEdges(result.edges);\n      setDetectedLines({\n        horizontal: result.horizontal_lines,\n        vertical: result.vertical_lines,\n        intersections: result.intersections,\n      });\n\n      setStatus(`Detected ${result.horizontal_lines} horizontal and ${result.vertical_lines} vertical lines`);\n    } catch (error) {\n      console.error('Error detecting surfaces:', error);\n      setStatus('Error detecting surfaces');\n    } finally {\n      setProcessing(false);\n    }\n  };\n\n  // Apply texture\n  const handleApplyTexture = async () => {\n    if (!originalImage || !selectedTexture || !selectedRegion) {\n      setStatus('Please select an image, texture, and region');\n      return;\n    }\n\n    try {\n      setProcessing(true);\n      setStatus('Applying texture...');\n\n      // Generate or get texture\n      let textureData = selectedTexture.data;\n\n      if (!textureData) {\n        // Generate texture from backend\n        const texResult = await apiService.generateTexture(\n          selectedTexture.type,\n          selectedRegion.width,\n          selectedRegion.height,\n          { base_color: selectedTexture.color || [139, 69, 19] }\n        );\n        textureData = texResult.texture;\n      }\n\n      // Calculate corners from selected region\n      const corners = [\n        [selectedRegion.x, selectedRegion.y],\n        [selectedRegion.x + selectedRegion.width, selectedRegion.y],\n        [selectedRegion.x + selectedRegion.width, selectedRegion.y + selectedRegion.height],\n        [selectedRegion.x, selectedRegion.y + selectedRegion.height],\n      ];\n\n      // Apply texture\n      const result = await apiService.applyTexture(\n        currentImage,\n        textureData,\n        corners,\n        opacity / 100,\n        brightness / 100\n      );\n\n      setCurrentImage(result.result);\n      setStatus('Texture applied successfully');\n    } catch (error) {\n      console.error('Error applying texture:', error);\n      setStatus('Error applying texture');\n    } finally {\n      setProcessing(false);\n    }\n  };\n\n  // Reset to original\n  const handleReset = () => {\n    setCurrentImage(originalImage);\n    setSelectedRegion(null);\n    setEdges(null);\n    setDetectedLines([]);\n    setStatus('Reset to original');\n  };\n\n  // Save result\n  const handleSave = () => {\n    if (!currentImage) return;\n\n    const link = document.createElement('a');\n    link.download = 'renderease-result.png';\n    link.href = currentImage;\n    link.click();\n\n    setStatus('Image saved successfully');\n  };\n\n  return (\n    <div className=\"App\">\n      <header className=\"app-header\">\n        <h1>RenderEase</h1>\n        <p className=\"subtitle\">Interior Design Visualization Tool</p>\n      </header>\n\n      <main className=\"app-main\">\n        <aside className=\"control-panel\">\n          <section className=\"panel-section\">\n            <h2>1. Upload Room Image</h2>\n            <ImageUploader onImageUpload={handleImageUpload} />\n          </section>\n\n          <section className=\"panel-section\">\n            <h2>2. Detect Surfaces</h2>\n            <div className=\"detection-controls\">\n              <button\n                className=\"btn btn-secondary\"\n                onClick={handleEdgeDetection}\n                disabled={!originalImage || processing}\n              >\n                Detect Edges\n              </button>\n              <button\n                className=\"btn btn-secondary\"\n                onClick={handleSurfaceDetection}\n                disabled={!originalImage || processing}\n              >\n                Detect Surfaces (Hough)\n              </button>\n            </div>\n            <p className=\"instruction-text\">\n              Or manually select a region on the canvas\n            </p>\n          </section>\n\n          <section className=\"panel-section\">\n            <h2>3. Choose Texture</h2>\n            <TextureLibrary\n              onTextureSelect={handleTextureSelect}\n              selectedTexture={selectedTexture}\n            />\n          </section>\n\n          <section className=\"panel-section\">\n            <h2>4. Adjust Settings</h2>\n            <Controls\n              opacity={opacity}\n              setOpacity={setOpacity}\n              brightness={brightness}\n              setBrightness={setBrightness}\n              blendMode={blendMode}\n              setBlendMode={setBlendMode}\n              perspectiveCorrection={perspectiveCorrection}\n              setPerspectiveCorrection={setPerspectiveCorrection}\n            />\n          </section>\n\n          <section className=\"panel-section\">\n            <h2>5. Actions</h2>\n            <div className=\"action-buttons\">\n              <button\n                className=\"btn btn-primary\"\n                onClick={handleApplyTexture}\n                disabled={!selectedTexture || !selectedRegion || processing}\n              >\n                {processing ? 'Processing...' : 'Apply Texture'}\n              </button>\n              <button\n                className=\"btn btn-secondary\"\n                onClick={handleReset}\n                disabled={!currentImage || processing}\n              >\n                Reset\n              </button>\n              <button\n                className=\"btn btn-success\"\n                onClick={handleSave}\n                disabled={!currentImage || processing}\n              >\n                Save Result\n              </button>\n            </div>\n          </section>\n        </aside>\n\n        <div className=\"canvas-area\">\n          <Canvas\n            image={currentImage}\n            edgeImage={edges}\n            onRegionSelect={handleRegionSelect}\n            selectedRegion={selectedRegion}\n          />\n\n          <div className=\"status-bar\">\n            <div className=\"status-item\">\n              <span className=\"status-label\">Status:</span>\n              <span className=\"status-value\">{status}</span>\n            </div>\n            {selectedRegion && (\n              <div className=\"status-item\">\n                <span className=\"status-label\">Selection:</span>\n                <span className=\"status-value\">\n                  {Math.round(selectedRegion.width)}x{Math.round(selectedRegion.height)}px\n                </span>\n              </div>\n            )}\n          </div>\n        </div>\n      </main>\n\n      <footer className=\"app-footer\">\n        <p>\n          RenderEase - COMP SCI 566 Project | Team: Bhinu Puvva, Bala Shukla, Rain Jiayu Sun\n        </p>\n      </footer>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}